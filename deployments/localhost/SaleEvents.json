{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessControlBadConfirmation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "neededRole",
          "type": "bytes32"
        }
      ],
      "name": "AccessControlUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SaleEvents__MustBeGreaterThanZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SaleEvents__NotAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SaleEvents__NotTime",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "APPROVAL_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_tokenUri",
          "type": "string"
        }
      ],
      "name": "buyAssetFraction",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endAt",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_assetType",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_assetPrice",
          "type": "uint256"
        }
      ],
      "name": "createSaleEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "editEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSaleEvents",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "assetType",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "startAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetPrice",
              "type": "uint256"
            },
            {
              "internalType": "enum SaleEvents.Status",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct SaleEvents.Event[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "callerConfirmation",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_docLink",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum SaleEvents.Status",
          "name": "_status",
          "type": "uint8"
        }
      ],
      "name": "validateEventDoc",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xde7d70b61e6dd1bffa1879a066d8c0cbb692aa5fd1848b8f4934913466900eb5",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1568603",
    "logsBloom": "0x
    "blockHash": "0xb6fd2b1734a6108c47a1f1c09d840a054e30ed95ef5d061f09be209ba242fe08",
    "transactionHash": "0xde7d70b61e6dd1bffa1879a066d8c0cbb692aa5fd1848b8f4934913466900eb5",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0xde7d70b61e6dd1bffa1879a066d8c0cbb692aa5fd1848b8f4934913466900eb5",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xb6fd2b1734a6108c47a1f1c09d840a054e30ed95ef5d061f09be209ba242fe08"
      }
    ],
    "blockNumber": 1,
    "cumulativeGasUsed": "1568603",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e6f9eaaf4437e4f4ad0bb55e52b7565b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaleEvents__MustBeGreaterThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaleEvents__NotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaleEvents__NotTime\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"APPROVAL_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenUri\",\"type\":\"string\"}],\"name\":\"buyAssetFraction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_assetType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_assetPrice\",\"type\":\"uint256\"}],\"name\":\"createSaleEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"editEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSaleEvents\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"assetType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetPrice\",\"type\":\"uint256\"},{\"internalType\":\"enum SaleEvents.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct SaleEvents.Event[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_docLink\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum SaleEvents.Status\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"validateEventDoc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CreateEvent.sol\":\"SaleEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"contracts/CreateEvent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\r\\nimport \\\"./IERC72.sol\\\";\\r\\n\\r\\nerror SaleEvents__NotTime();\\r\\nerror SaleEvents__NotApproved();\\r\\nerror SaleEvents__NotAdmin();\\r\\nerror SaleEvents__MustBeGreaterThanZero();\\r\\n\\r\\ncontract SaleEvents is AccessControl {\\r\\n    uint256 private totalNumberEvents;\\r\\n    address public immutable i_owner;\\r\\n    bytes32 public constant APPROVAL_ROLE = keccak256(\\\"APPROVAL_ROLE\\\");\\r\\n\\r\\n    enum Status {\\r\\n        Pending,\\r\\n        Not_Approved,\\r\\n        Approved\\r\\n    }\\r\\n\\r\\n    struct User {\\r\\n        address seller;\\r\\n        uint256 totalEarned;\\r\\n    }\\r\\n\\r\\n    struct Event {\\r\\n        string assetType;\\r\\n        uint256 startAt;\\r\\n        uint256 endAt;\\r\\n        uint256 assetPrice;\\r\\n        Status status;\\r\\n        // uint256 assetFractionAvailable;\\r\\n    }\\r\\n\\r\\n    mapping(address => mapping(uint256 => User)) private userToEventId;\\r\\n    mapping(uint256 => Event) private eachEvent;\\r\\n    // mapping(address => mapping(address =))\\r\\n\\r\\n    Event[] private allEvents;\\r\\n\\r\\n    modifier onlyAdmin() {\\r\\n        if (i_owner != msg.sender) revert SaleEvents__NotAdmin();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        i_owner = msg.sender;\\r\\n        _grantRole(DEFAULT_ADMIN_ROLE, i_owner);\\r\\n    }\\r\\n\\r\\n    function createSaleEvent(\\r\\n        uint256 _startAt,\\r\\n        uint256 _endAt,\\r\\n        string calldata _assetType,\\r\\n        uint256 _assetPrice // Doclink\\r\\n    ) external {\\r\\n        Event memory saleEvent = Event(\\r\\n            _assetType,\\r\\n            _startAt,\\r\\n            _endAt,\\r\\n            _assetPrice,\\r\\n            Status.Pending\\r\\n        );\\r\\n        // if (\\r\\n        //     saleEvent.status == Status.Pending ||\\r\\n        //     saleEvent.status == Status.Not_Approved\\r\\n        // ) revert SaleEvents__NotApproved(); // Remove this\\r\\n        if (block.timestamp < _startAt) revert SaleEvents__NotTime();\\r\\n        userToEventId[msg.sender][totalNumberEvents] = User(msg.sender, 0);\\r\\n        eachEvent[totalNumberEvents] = saleEvent;\\r\\n        allEvents.push(saleEvent);\\r\\n\\r\\n        totalNumberEvents += 1;\\r\\n    }\\r\\n\\r\\n    function editEvent() external {}\\r\\n\\r\\n    function validateEventDoc(\\r\\n        string calldata _docLink,\\r\\n        uint256 eventId,\\r\\n        Status _status\\r\\n    ) external onlyRole(APPROVAL_ROLE) {\\r\\n        Event memory theEvent = eachEvent[eventId];\\r\\n        theEvent.status = _status;\\r\\n\\r\\n        // emit ValidateEvent(eventId, _status);\\r\\n    }\\r\\n\\r\\n    function grantRole(bytes32, address account) public override onlyAdmin {\\r\\n        _grantRole(APPROVAL_ROLE, account);\\r\\n    }\\r\\n\\r\\n    function buyAssetFraction(\\r\\n        uint256 eventId,\\r\\n        address nftAddress,\\r\\n        uint256 price,\\r\\n        string memory _tokenUri\\r\\n    ) external payable {\\r\\n        if (msg.value < 0) revert SaleEvents__MustBeGreaterThanZero();\\r\\n        IERC72 nft = IERC72(nftAddress);\\r\\n        nft.mintNft(msg.sender, _tokenUri);\\r\\n    }\\r\\n\\r\\n    // getter functions\\r\\n    function getSaleEvents() public view returns (Event[] memory) {\\r\\n        return allEvents;\\r\\n    }\\r\\n}\\r\\n\\r\\n// 1. Create event\\r\\n// 2. Edit event\\r\\n// 2. Validate Doc by Admins\\r\\n// 2. Buy asset\\r\\n// 2. Cancel event\\r\\n// 4. DEFI\\r\\n\",\"keccak256\":\"0x293106fafcec16253684dec2c6ce47ea57b7d8ac5bb381874822251715577e90\",\"license\":\"MIT\"},\"contracts/IERC72.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\ninterface IERC72 {\\r\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\r\\n\\r\\n    function mintNft(address to, string memory tokenURI) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xc6d74cccf737f8e157d921b598adb324d5e5ec502b4aec5e951c22aa8092ef44\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506200005d6000801b6080516200006460201b60201c565b50620001d9565b60006200007883836200016760201b60201c565b6200015c57600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620000f8620001d160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905062000161565b600090505b92915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b608051611aec620001fc600039600081816105660152610aa90152611aec6000f3fe6080604052600436106100dd5760003560e01c806391d148541161007f578063c6638a5011610059578063c6638a50146102aa578063d547741f146102c6578063dba6335f146102ef578063fff3f10b1461031a576100dd565b806391d1485414610219578063a0f66dd914610256578063a217fddf1461027f576100dd565b80632f2ff15d116100bb5780632f2ff15d1461018557806336568abe146101ae5780636518ac7d146101d7578063874e8ecd146101ee576100dd565b806301ffc9a7146100e2578063248a9ca31461011f5780632aaf5b601461015c575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190610f3b565b610345565b6040516101169190610f83565b60405180910390f35b34801561012b57600080fd5b5061014660048036038101906101419190610fd4565b6103bf565b6040516101539190611010565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e91906110eb565b6103de565b005b34801561019157600080fd5b506101ac60048036038101906101a791906111bd565b61054d565b005b3480156101ba57600080fd5b506101d560048036038101906101d091906111bd565b610601565b005b3480156101e357600080fd5b506101ec61067c565b005b3480156101fa57600080fd5b5061020361067e565b6040516102109190611010565b60405180910390f35b34801561022557600080fd5b50610240600480360381019061023b91906111bd565b6106a2565b60405161024d9190610f83565b60405180910390f35b34801561026257600080fd5b5061027d600480360381019061027891906111fd565b61070c565b005b34801561028b57600080fd5b506102946109ca565b6040516102a19190611010565b60405180910390f35b6102c460048036038101906102bf91906113c6565b6109d1565b005b3480156102d257600080fd5b506102ed60048036038101906102e891906111bd565b610a85565b005b3480156102fb57600080fd5b50610304610aa7565b6040516103119190611458565b60405180910390f35b34801561032657600080fd5b5061032f610acb565b60405161033c91906116b0565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103b857506103b782610c15565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b7fa7b815c98465fe95fbd83842156c92c111a8223a11dd0ecef5ced0d0b7c01e4161040881610c7f565b6000600360008581526020019081526020016000206040518060a001604052908160008201805461043890611701565b80601f016020809104026020016040519081016040528092919081815260200182805461046490611701565b80156104b15780601f10610486576101008083540402835291602001916104b1565b820191906000526020600020905b81548152906001019060200180831161049457829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1660028111156104fd576104fc61152d565b5b600281111561050f5761050e61152d565b5b815250509050828160800190600281111561052d5761052c61152d565b5b908160028111156105415761054061152d565b5b81525050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16146105d2576040517f6c915fd900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105fc7fa7b815c98465fe95fbd83842156c92c111a8223a11dd0ecef5ced0d0b7c01e4182610c93565b505050565b610609610d84565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461066d576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106778282610d8c565b505050565b565b7fa7b815c98465fe95fbd83842156c92c111a8223a11dd0ecef5ced0d0b7c01e4181565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006040518060a0016040528085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001878152602001868152602001838152602001600060028111156107895761078861152d565b5b8152509050854210156107c8576040517f82f9b22e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020016000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050508060036000600154815260200190815260200160002060008201518160000190816108c591906118de565b5060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083600281111561090f5761090e61152d565b5b02179055509050506004819080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015181600001908161095891906118de565b5060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908360028111156109a2576109a161152d565b5b0217905550505060018060008282546109bb91906119df565b92505081905550505050505050565b6000801b81565b6000341015610a0c576040517f2ca318cb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008390508073ffffffffffffffffffffffffffffffffffffffff166311f87b1933846040518363ffffffff1660e01b8152600401610a4c929190611a5d565b600060405180830381600087803b158015610a6657600080fd5b505af1158015610a7a573d6000803e3d6000fd5b505050505050505050565b610a8e826103bf565b610a9781610c7f565b610aa18383610d8c565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60606004805480602002602001604051908101604052809291908181526020016000905b82821015610c0c57838290600052602060002090600502016040518060a0016040529081600082018054610b2290611701565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4e90611701565b8015610b9b5780601f10610b7057610100808354040283529160200191610b9b565b820191906000526020600020905b815481529060010190602001808311610b7e57829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff166002811115610be757610be661152d565b5b6002811115610bf957610bf861152d565b5b8152505081526020019060010190610aef565b50505050905090565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610c9081610c8b610d84565b610e7e565b50565b6000610c9f83836106a2565b610d7957600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610d16610d84565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610d7e565b600090505b92915050565b600033905090565b6000610d9883836106a2565b15610e7357600080600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610e10610d84565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610e78565b600090505b92915050565b610e8882826106a2565b610ecb5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610ec2929190611a8d565b60405180910390fd5b5050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f1881610ee3565b8114610f2357600080fd5b50565b600081359050610f3581610f0f565b92915050565b600060208284031215610f5157610f50610ed9565b5b6000610f5f84828501610f26565b91505092915050565b60008115159050919050565b610f7d81610f68565b82525050565b6000602082019050610f986000830184610f74565b92915050565b6000819050919050565b610fb181610f9e565b8114610fbc57600080fd5b50565b600081359050610fce81610fa8565b92915050565b600060208284031215610fea57610fe9610ed9565b5b6000610ff884828501610fbf565b91505092915050565b61100a81610f9e565b82525050565b60006020820190506110256000830184611001565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126110505761104f61102b565b5b8235905067ffffffffffffffff81111561106d5761106c611030565b5b60208301915083600182028301111561108957611088611035565b5b9250929050565b6000819050919050565b6110a381611090565b81146110ae57600080fd5b50565b6000813590506110c08161109a565b92915050565b600381106110d357600080fd5b50565b6000813590506110e5816110c6565b92915050565b6000806000806060858703121561110557611104610ed9565b5b600085013567ffffffffffffffff81111561112357611122610ede565b5b61112f8782880161103a565b94509450506020611142878288016110b1565b9250506040611153878288016110d6565b91505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061118a8261115f565b9050919050565b61119a8161117f565b81146111a557600080fd5b50565b6000813590506111b781611191565b92915050565b600080604083850312156111d4576111d3610ed9565b5b60006111e285828601610fbf565b92505060206111f3858286016111a8565b9150509250929050565b60008060008060006080868803121561121957611218610ed9565b5b6000611227888289016110b1565b9550506020611238888289016110b1565b945050604086013567ffffffffffffffff81111561125957611258610ede565b5b6112658882890161103a565b93509350506060611278888289016110b1565b9150509295509295909350565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112d38261128a565b810181811067ffffffffffffffff821117156112f2576112f161129b565b5b80604052505050565b6000611305610ecf565b905061131182826112ca565b919050565b600067ffffffffffffffff8211156113315761133061129b565b5b61133a8261128a565b9050602081019050919050565b82818337600083830152505050565b600061136961136484611316565b6112fb565b90508281526020810184848401111561138557611384611285565b5b611390848285611347565b509392505050565b600082601f8301126113ad576113ac61102b565b5b81356113bd848260208601611356565b91505092915050565b600080600080608085870312156113e0576113df610ed9565b5b60006113ee878288016110b1565b94505060206113ff878288016111a8565b9350506040611410878288016110b1565b925050606085013567ffffffffffffffff81111561143157611430610ede565b5b61143d87828801611398565b91505092959194509250565b6114528161117f565b82525050565b600060208201905061146d6000830184611449565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114d95780820151818401526020810190506114be565b60008484015250505050565b60006114f08261149f565b6114fa81856114aa565b935061150a8185602086016114bb565b6115138161128a565b840191505092915050565b61152781611090565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061156d5761156c61152d565b5b50565b600081905061157e8261155c565b919050565b600061158e82611570565b9050919050565b61159e81611583565b82525050565b600060a08301600083015184820360008601526115c182826114e5565b91505060208301516115d6602086018261151e565b5060408301516115e9604086018261151e565b5060608301516115fc606086018261151e565b50608083015161160f6080860182611595565b508091505092915050565b600061162683836115a4565b905092915050565b6000602082019050919050565b600061164682611473565b611650818561147e565b9350836020820285016116628561148f565b8060005b8581101561169e578484038952815161167f858261161a565b945061168a8361162e565b925060208a01995050600181019050611666565b50829750879550505050505092915050565b600060208201905081810360008301526116ca818461163b565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061171957607f821691505b60208210810361172c5761172b6116d2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026117947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611757565b61179e8683611757565b95508019841693508086168417925050509392505050565b6000819050919050565b60006117db6117d66117d184611090565b6117b6565b611090565b9050919050565b6000819050919050565b6117f5836117c0565b611809611801826117e2565b848454611764565b825550505050565b600090565b61181e611811565b6118298184846117ec565b505050565b5b8181101561184d57611842600082611816565b60018101905061182f565b5050565b601f8211156118925761186381611732565b61186c84611747565b8101602085101561187b578190505b61188f61188785611747565b83018261182e565b50505b505050565b600082821c905092915050565b60006118b560001984600802611897565b1980831691505092915050565b60006118ce83836118a4565b9150826002028217905092915050565b6118e78261149f565b67ffffffffffffffff811115611900576118ff61129b565b5b61190a8254611701565b611915828285611851565b600060209050601f8311600181146119485760008415611936578287015190505b61194085826118c2565b8655506119a8565b601f19841661195686611732565b60005b8281101561197e57848901518255600182019150602085019450602081019050611959565b8683101561199b5784890151611997601f8916826118a4565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119ea82611090565b91506119f583611090565b9250828201905080821115611a0d57611a0c6119b0565b5b92915050565b600082825260208201905092915050565b6000611a2f8261149f565b611a398185611a13565b9350611a498185602086016114bb565b611a528161128a565b840191505092915050565b6000604082019050611a726000830185611449565b8181036020830152611a848184611a24565b90509392505050565b6000604082019050611aa26000830185611449565b611aaf6020830184611001565b939250505056fea2646970667358221220ceeb25173022563907089a69cdec1fc0cb4d3103c263458521494e2ba51b768364736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100dd5760003560e01c806391d148541161007f578063c6638a5011610059578063c6638a50146102aa578063d547741f146102c6578063dba6335f146102ef578063fff3f10b1461031a576100dd565b806391d1485414610219578063a0f66dd914610256578063a217fddf1461027f576100dd565b80632f2ff15d116100bb5780632f2ff15d1461018557806336568abe146101ae5780636518ac7d146101d7578063874e8ecd146101ee576100dd565b806301ffc9a7146100e2578063248a9ca31461011f5780632aaf5b601461015c575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190610f3b565b610345565b6040516101169190610f83565b60405180910390f35b34801561012b57600080fd5b5061014660048036038101906101419190610fd4565b6103bf565b6040516101539190611010565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e91906110eb565b6103de565b005b34801561019157600080fd5b506101ac60048036038101906101a791906111bd565b61054d565b005b3480156101ba57600080fd5b506101d560048036038101906101d091906111bd565b610601565b005b3480156101e357600080fd5b506101ec61067c565b005b3480156101fa57600080fd5b5061020361067e565b6040516102109190611010565b60405180910390f35b34801561022557600080fd5b50610240600480360381019061023b91906111bd565b6106a2565b60405161024d9190610f83565b60405180910390f35b34801561026257600080fd5b5061027d600480360381019061027891906111fd565b61070c565b005b34801561028b57600080fd5b506102946109ca565b6040516102a19190611010565b60405180910390f35b6102c460048036038101906102bf91906113c6565b6109d1565b005b3480156102d257600080fd5b506102ed60048036038101906102e891906111bd565b610a85565b005b3480156102fb57600080fd5b50610304610aa7565b6040516103119190611458565b60405180910390f35b34801561032657600080fd5b5061032f610acb565b60405161033c91906116b0565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103b857506103b782610c15565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b7fa7b815c98465fe95fbd83842156c92c111a8223a11dd0ecef5ced0d0b7c01e4161040881610c7f565b6000600360008581526020019081526020016000206040518060a001604052908160008201805461043890611701565b80601f016020809104026020016040519081016040528092919081815260200182805461046490611701565b80156104b15780601f10610486576101008083540402835291602001916104b1565b820191906000526020600020905b81548152906001019060200180831161049457829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1660028111156104fd576104fc61152d565b5b600281111561050f5761050e61152d565b5b815250509050828160800190600281111561052d5761052c61152d565b5b908160028111156105415761054061152d565b5b81525050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16146105d2576040517f6c915fd900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105fc7fa7b815c98465fe95fbd83842156c92c111a8223a11dd0ecef5ced0d0b7c01e4182610c93565b505050565b610609610d84565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461066d576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106778282610d8c565b505050565b565b7fa7b815c98465fe95fbd83842156c92c111a8223a11dd0ecef5ced0d0b7c01e4181565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006040518060a0016040528085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001878152602001868152602001838152602001600060028111156107895761078861152d565b5b8152509050854210156107c8576040517f82f9b22e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020016000815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050508060036000600154815260200190815260200160002060008201518160000190816108c591906118de565b5060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083600281111561090f5761090e61152d565b5b02179055509050506004819080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015181600001908161095891906118de565b5060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908360028111156109a2576109a161152d565b5b0217905550505060018060008282546109bb91906119df565b92505081905550505050505050565b6000801b81565b6000341015610a0c576040517f2ca318cb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008390508073ffffffffffffffffffffffffffffffffffffffff166311f87b1933846040518363ffffffff1660e01b8152600401610a4c929190611a5d565b600060405180830381600087803b158015610a6657600080fd5b505af1158015610a7a573d6000803e3d6000fd5b505050505050505050565b610a8e826103bf565b610a9781610c7f565b610aa18383610d8c565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60606004805480602002602001604051908101604052809291908181526020016000905b82821015610c0c57838290600052602060002090600502016040518060a0016040529081600082018054610b2290611701565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4e90611701565b8015610b9b5780601f10610b7057610100808354040283529160200191610b9b565b820191906000526020600020905b815481529060010190602001808311610b7e57829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff166002811115610be757610be661152d565b5b6002811115610bf957610bf861152d565b5b8152505081526020019060010190610aef565b50505050905090565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610c9081610c8b610d84565b610e7e565b50565b6000610c9f83836106a2565b610d7957600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610d16610d84565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610d7e565b600090505b92915050565b600033905090565b6000610d9883836106a2565b15610e7357600080600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610e10610d84565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610e78565b600090505b92915050565b610e8882826106a2565b610ecb5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610ec2929190611a8d565b60405180910390fd5b5050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f1881610ee3565b8114610f2357600080fd5b50565b600081359050610f3581610f0f565b92915050565b600060208284031215610f5157610f50610ed9565b5b6000610f5f84828501610f26565b91505092915050565b60008115159050919050565b610f7d81610f68565b82525050565b6000602082019050610f986000830184610f74565b92915050565b6000819050919050565b610fb181610f9e565b8114610fbc57600080fd5b50565b600081359050610fce81610fa8565b92915050565b600060208284031215610fea57610fe9610ed9565b5b6000610ff884828501610fbf565b91505092915050565b61100a81610f9e565b82525050565b60006020820190506110256000830184611001565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126110505761104f61102b565b5b8235905067ffffffffffffffff81111561106d5761106c611030565b5b60208301915083600182028301111561108957611088611035565b5b9250929050565b6000819050919050565b6110a381611090565b81146110ae57600080fd5b50565b6000813590506110c08161109a565b92915050565b600381106110d357600080fd5b50565b6000813590506110e5816110c6565b92915050565b6000806000806060858703121561110557611104610ed9565b5b600085013567ffffffffffffffff81111561112357611122610ede565b5b61112f8782880161103a565b94509450506020611142878288016110b1565b9250506040611153878288016110d6565b91505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061118a8261115f565b9050919050565b61119a8161117f565b81146111a557600080fd5b50565b6000813590506111b781611191565b92915050565b600080604083850312156111d4576111d3610ed9565b5b60006111e285828601610fbf565b92505060206111f3858286016111a8565b9150509250929050565b60008060008060006080868803121561121957611218610ed9565b5b6000611227888289016110b1565b9550506020611238888289016110b1565b945050604086013567ffffffffffffffff81111561125957611258610ede565b5b6112658882890161103a565b93509350506060611278888289016110b1565b9150509295509295909350565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112d38261128a565b810181811067ffffffffffffffff821117156112f2576112f161129b565b5b80604052505050565b6000611305610ecf565b905061131182826112ca565b919050565b600067ffffffffffffffff8211156113315761133061129b565b5b61133a8261128a565b9050602081019050919050565b82818337600083830152505050565b600061136961136484611316565b6112fb565b90508281526020810184848401111561138557611384611285565b5b611390848285611347565b509392505050565b600082601f8301126113ad576113ac61102b565b5b81356113bd848260208601611356565b91505092915050565b600080600080608085870312156113e0576113df610ed9565b5b60006113ee878288016110b1565b94505060206113ff878288016111a8565b9350506040611410878288016110b1565b925050606085013567ffffffffffffffff81111561143157611430610ede565b5b61143d87828801611398565b91505092959194509250565b6114528161117f565b82525050565b600060208201905061146d6000830184611449565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114d95780820151818401526020810190506114be565b60008484015250505050565b60006114f08261149f565b6114fa81856114aa565b935061150a8185602086016114bb565b6115138161128a565b840191505092915050565b61152781611090565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061156d5761156c61152d565b5b50565b600081905061157e8261155c565b919050565b600061158e82611570565b9050919050565b61159e81611583565b82525050565b600060a08301600083015184820360008601526115c182826114e5565b91505060208301516115d6602086018261151e565b5060408301516115e9604086018261151e565b5060608301516115fc606086018261151e565b50608083015161160f6080860182611595565b508091505092915050565b600061162683836115a4565b905092915050565b6000602082019050919050565b600061164682611473565b611650818561147e565b9350836020820285016116628561148f565b8060005b8581101561169e578484038952815161167f858261161a565b945061168a8361162e565b925060208a01995050600181019050611666565b50829750879550505050505092915050565b600060208201905081810360008301526116ca818461163b565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061171957607f821691505b60208210810361172c5761172b6116d2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026117947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611757565b61179e8683611757565b95508019841693508086168417925050509392505050565b6000819050919050565b60006117db6117d66117d184611090565b6117b6565b611090565b9050919050565b6000819050919050565b6117f5836117c0565b611809611801826117e2565b848454611764565b825550505050565b600090565b61181e611811565b6118298184846117ec565b505050565b5b8181101561184d57611842600082611816565b60018101905061182f565b5050565b601f8211156118925761186381611732565b61186c84611747565b8101602085101561187b578190505b61188f61188785611747565b83018261182e565b50505b505050565b600082821c905092915050565b60006118b560001984600802611897565b1980831691505092915050565b60006118ce83836118a4565b9150826002028217905092915050565b6118e78261149f565b67ffffffffffffffff811115611900576118ff61129b565b5b61190a8254611701565b611915828285611851565b600060209050601f8311600181146119485760008415611936578287015190505b61194085826118c2565b8655506119a8565b601f19841661195686611732565b60005b8281101561197e57848901518255600182019150602085019450602081019050611959565b8683101561199b5784890151611997601f8916826118a4565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119ea82611090565b91506119f583611090565b9250828201905080821115611a0d57611a0c6119b0565b5b92915050565b600082825260208201905092915050565b6000611a2f8261149f565b611a398185611a13565b9350611a498185602086016114bb565b611a528161128a565b840191505092915050565b6000604082019050611a726000830185611449565b8181036020830152611a848184611a24565b90509392505050565b6000604082019050611aa26000830185611449565b611aaf6020830184611001565b939250505056fea2646970667358221220ceeb25173022563907089a69cdec1fc0cb4d3103c263458521494e2ba51b768364736f6c63430008140033",
  "devdoc": {
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ]
    },
    "events": {
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      }
    },
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26,
        "contract": "contracts/CreateEvent.sol:SaleEvents",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
      },
      {
        "astId": 460,
        "contract": "contracts/CreateEvent.sol:SaleEvents",
        "label": "totalNumberEvents",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 495,
        "contract": "contracts/CreateEvent.sol:SaleEvents",
        "label": "userToEventId",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(User)476_storage))"
      },
      {
        "astId": 500,
        "contract": "contracts/CreateEvent.sol:SaleEvents",
        "label": "eachEvent",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Event)488_storage)"
      },
      {
        "astId": 504,
        "contract": "contracts/CreateEvent.sol:SaleEvents",
        "label": "allEvents",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_struct(Event)488_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Event)488_storage)dyn_storage": {
        "base": "t_struct(Event)488_storage",
        "encoding": "dynamic_array",
        "label": "struct SaleEvents.Event[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(Status)471": {
        "encoding": "inplace",
        "label": "enum SaleEvents.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(User)476_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct SaleEvents.User))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(User)476_storage)"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)21_storage"
      },
      "t_mapping(t_uint256,t_struct(Event)488_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct SaleEvents.Event)",
        "numberOfBytes": "32",
        "value": "t_struct(Event)488_storage"
      },
      "t_mapping(t_uint256,t_struct(User)476_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct SaleEvents.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)476_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Event)488_storage": {
        "encoding": "inplace",
        "label": "struct SaleEvents.Event",
        "members": [
          {
            "astId": 478,
            "contract": "contracts/CreateEvent.sol:SaleEvents",
            "label": "assetType",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 480,
            "contract": "contracts/CreateEvent.sol:SaleEvents",
            "label": "startAt",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 482,
            "contract": "contracts/CreateEvent.sol:SaleEvents",
            "label": "endAt",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 484,
            "contract": "contracts/CreateEvent.sol:SaleEvents",
            "label": "assetPrice",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 487,
            "contract": "contracts/CreateEvent.sol:SaleEvents",
            "label": "status",
            "offset": 0,
            "slot": "4",
            "type": "t_enum(Status)471"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(RoleData)21_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 18,
            "contract": "contracts/CreateEvent.sol:SaleEvents",
            "label": "hasRole",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 20,
            "contract": "contracts/CreateEvent.sol:SaleEvents",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(User)476_storage": {
        "encoding": "inplace",
        "label": "struct SaleEvents.User",
        "members": [
          {
            "astId": 473,
            "contract": "contracts/CreateEvent.sol:SaleEvents",
            "label": "seller",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 475,
            "contract": "contracts/CreateEvent.sol:SaleEvents",
            "label": "totalEarned",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}